version: "3.8"

networks:
    canoe_network:
        driver: bridge

services:
    nginx:
        build:
            context: .
            dockerfile: ./.docker/nginx/Dockerfile
        container_name: canoe-nginx
        ports:
            - "8040:80"
            - "8050:443"
        restart: unless-stopped
        volumes:
            - ./public:/var/www/html/public
            - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./.docker/nginx/upstream.conf:/etc/nginx/conf.d/upstream.conf
            - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - api
        networks:
            - canoe_network

    api:
        build:
            context: .
            dockerfile: ./.docker/php/Dockerfile
        container_name: canoe-api
        volumes:
            - ./:/var/www/html
            - ./.docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
        restart: unless-stopped
        tty: true
        environment:
            - APP_ENV=local
        networks:
            - canoe_network
        depends_on:
            - database
            - queue

    database:
        platform: linux/x86_64 # Need to execute mysql in M1 Macbook
        image: mysql:8.0
        container_name: canoe-mysql
        ports:
            - "3340:3306"
        volumes:
            - ./.data/mysql:/var/lib/mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: canoe
            MYSQL_USER: canoe
            MYSQL_PASSWORD: canoe
            MYSQL_ROOT_PASSWORD: root
        networks:
            - canoe_network

    queue:
        image: redis:6.2
        container_name: canoe-queue
        command: redis-server --requirepass ${REDIS_PASSWORD}
        restart: unless-stopped
        networks:
            - canoe_network
